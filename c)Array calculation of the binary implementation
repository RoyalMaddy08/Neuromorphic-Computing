import numpy as np
import matplotlib.pyplot as plt

# Define the squared Euclidean distances
D = np.linspace(0, 10, 100)  # 100 points between 0 and 10

# Define the proportionality constant (Vout)
V_out = 1e-6  # Very small, realistic value

# Calculate the total current
I = V_out * D

# Specific point for annotation (example)
squared_distance_point = 0.04
total_current_point = V_out * squared_distance_point

# Print the values
print(f'Squared Euclidean distance: {squared_distance_point:.4f}')
print(f'Total current (computed): {total_current_point:.2e} A')
print(f'Proportionality constant (Vout): {V_out:.2e}')

# Create the plot
plt.figure(figsize=(10, 6))
plt.plot(D, I, label=f'Total Current vs Squared Euclidean Distance', color='b')
plt.scatter(squared_distance_point, total_current_point, color='r', label='Computed Value')

# Labeling the graph
plt.title('Relationship between Total Current and Squared Euclidean Distance')
plt.xlabel('Squared Euclidean Distance')
plt.ylabel('Total Current (A)')
plt.legend()
plt.grid(True)

# Show the plot
plt.show()
