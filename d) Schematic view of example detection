import numpy as np
import matplotlib.pyplot as plt

# Define input vectors from the given voltages
x = np.array([1, 0.8, 0.6, 0.7, 0.2])
xi = np.array([0.9, 0.4, 0.3, 0.1, 0.5])

# Calculate squared Euclidean distance
squared_diff = (x - xi) ** 2
squared_euclidean_distance = np.sum(squared_diff)

# Constants (Resistance in ohms, Vunit, and Gunit)
R = 10e3  # 10k ohms
Vunit = 1  # Assume 1V as unit voltage
Gunit = 1 / R  # Conductance unit (S = 1/R)

# Calculate currents through each resistor (I = V/R)
currents = (x - xi) / R

# Total current (sum of absolute values of individual currents)
total_current = np.sum(np.abs(currents))

# Proportionality constant
proportionality_constant = Vunit * Gunit

# Proportional Squared Distance
proportional_squared_distance = total_current * proportionality_constant

# Print results
print(f"Squared Euclidean Distance: {squared_euclidean_distance}")
print(f"Total Current: {total_current} A")
print(f"Proportionality Constant (Vunit * Gunit): {proportionality_constant}")
print(f"Proportional Squared Distance: {proportional_squared_distance}")

# Plotting
plt.figure(figsize=(8, 6))
plt.scatter([squared_euclidean_distance], [total_current], color='red', label='Data Point')
plt.plot([0, squared_euclidean_distance], [0, total_current], 'b--', label='Proportionality Line')
plt.xlabel('Squared Euclidean Distance')
plt.ylabel('Total Current (A)')
plt.title('Proportionality between Squared Euclidean Distance and Total Current')
plt.legend()
plt.grid(True)
plt.show()
